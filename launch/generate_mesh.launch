<launch>
  <arg name="launch_voxblox" default="true" />

  <group if="$(arg launch_voxblox)">
      <arg name="voxel_size" default="0.1" />
      <!-- launch voxblox to make mesh -->  
      <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" args="-alsologtostderr" clear_params="true" >
        <remap from="pointcloud" to="/stereo_gray/dense_stereo/pointcloud" />
        <remap from="freespace_pointcloud" to="/stereo_gray/dense_stereo/freespace_pointcloud"/>
        <param name="use_freespace_pointcloud" value="true" />
        <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
        <param name="tsdf_voxels_per_side" value="16" />
        <param name="voxel_carving_enabled" value="true" />
        <param name="color_mode" value="colors" />
        <param name="use_tf_transforms" value="true" />
        <param name="sensor_frame" value="cam0" />
        <!-- <remap from="transform" to="vicon/firefly_sbx/firefly_sbx" /> -->
        <param name="enable_icp" value="true" />
        <param name="verbose" value="true" />
        <param name="update_mesh_every_n_sec" value="0.1" />
        <param name="slice_level" value="1.0" />
        <param name="max_ray_length_m" value="10" />
        <param name="min_ray_length_m" value="0.01" />
        <param name="min_time_between_msgs_sec" value="0.2" />
        <param name="method" value="fast" />
        <param name="use_const_weight" value="false" />
        <param name="publish_slices" value="false" />
        <param name="publish_pointclouds" value="false" />
        <rosparam file="$(find voxblox_ros)/cfg/euroc_dataset.yaml"/>
        <param name="mesh_filename" value="/home/yunchang/Downloads/un_optimized.ply" />
      </node>
  </group>

  <node name="voxblox_to_mesh" pkg="kimera_pgmo" type="voxblox_to_mesh" output="screen" >
    <remap from="/voxblox_mesh" to="/voxblox_node/mesh" if="$(arg launch_voxblox)" />
    <remap from="/voxblox_mesh" to="/kimera_semantics_node/mesh" unless="$(arg launch_voxblox)" />
  </node> 
</launch>