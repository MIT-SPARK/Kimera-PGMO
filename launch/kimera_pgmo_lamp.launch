<launch>
  <arg name="dataset" default="lamp" />
  <arg name="robot_id" default="0" />
  <arg name="robot_name" default="husky1" />
  <arg name="base_name" default="base1" />
  <arg name="run_mode" default="0" /> 
  <arg name="use_msg_time" default="true" />
  <arg name="output_path" default="$(find kimera_pgmo)/log" />
  <arg name="horizon" default="300" />
  <arg name="output_resolution" default="0.08" />
  <arg name="log" default="true" />
  <arg name="use_sim_time"     default="true" if="$(arg use_msg_time)" />
  <arg name="use_sim_time"     default="false" unless="$(arg use_msg_time)" />
  <param name="use_sim_time"   value="$(arg use_sim_time)" />

  <node name="voxblox_processing" pkg="kimera_pgmo" type="voxblox_processing_node" >
    <param name="horizon" value="$(arg horizon)" />
    <param name="output_mesh_resolution" value="$(arg output_resolution)" />
    <param name="robot_id" value="$(arg robot_id)" />
    <remap from="~voxblox_mesh" to="/$(arg robot_name)/voxblox_node/mesh" />
  </node> 

  <node type="kimera_pgmo_node" name="kimera_pgmo_node" pkg="kimera_pgmo" output="screen" >
    <rosparam file="$(find kimera_pgmo)/params/$(arg dataset)/parameters.yaml" />
    <param name="output_prefix" value="$(arg output_path)" />
    <param name="run_mode" value="$(arg run_mode)" />
    <param name="use_msg_time" value="$(arg use_msg_time)" />
    <param name="log_output" value="$(arg log)" />
    <remap from="~incremental_mesh" to="voxblox_processing/partial_mesh" />
    <remap from="~full_mesh" to="voxblox_processing/full_mesh" />
    <remap from="~pose_graph_incremental" to="/$(arg base_name)/lamp_kimera_bridge/incremental_pose_graph" />
  </node>

  <include file="$(find pose_graph_tools)/launch/posegraph_view.launch" >
    <arg name="frame_id"      value="world" />
    <arg name="graph_topic"   value="pose_graph" />
    <arg name="ns"            value="kimera_pgmo_node"/>
  </include>

  <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" ns="$(arg robot_name)"
    args="-alsologtostderr -colorlogtostderr" clear_params="true">
    <!-- Input -->
    <remap from="pointcloud"                to="combined_point_cloud"/>

    <!-- Params -->
    <param name="tsdf_voxel_size"           value="0.1" />
    <param name="tsdf_voxels_per_side"      value="16" />
    <param name="max_ray_length_m"          value="80" />
    <param name="min_time_between_msgs_sec" value="0.8" />
    <param name="pointcloud_queue_size"     value="10" />
    <param name="voxel_carving_enabled"     value="true" />
    <param name="color_mode"                value="height"/>
    <param name="use_const_weight"          value="false" />
    <param name="use_freespace_pointcloud"  value="false" />
    <remap from="freespace_pointcloud"      to="/dev/null"/>

    <param name="sensor_frame"              value="$(arg robot_name)/base_link"/>
    <param name="use_tf_transforms"         value="true" />

    <param name="enable_icp"                value="false" />
    <param name="icp_iterations"            value="10" />

    <param name="verbose"                   value="true" />

    <!-- Method to update voxels' information: "fast" or "merged" -->
    <param name="method"                           value="fast" />

    <param name="slice_level" value="1.0" />

    <!-- <param name="max_block_distance_from_body" value="5.0" /> -->

    <param name="publish_pointclouds"     value="false"/>
    <param name="update_mesh_every_n_sec" value="0.1" />
    <param name="mesh_filename"           value="$(find kimera_pgmo)/log/mesh_voxblox.ply" />
  </node>
  
</launch>